Q1] Create a Simple Android Application Which Send ―Hello‖ message from one activity to
another with help of Button (Use Intent).
MainActivity.java:
package com.example.hellomessage;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
public class MainActivity extends AppCompatActivity {
 Button sendButton;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 sendButton = findViewById(R.id.send_button);
 sendButton.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 sendMessage();
 }
 });
 }
 private void sendMessage() {
 Intent intent = new Intent(this, SecondActivity.class);
 intent.putExtra("message", "Hello");
 startActivity(intent);
 }
}
SecondActivity.java:
package com.example.hellomessage;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;
public class SecondActivity extends AppCompatActivity {
 TextView messageTextView;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_second);
 messageTextView = findViewById(R.id.message_text_view);
 // Retrieve the message from the intent
 Bundle extras = getIntent().getExtras();
 if (extras != null) {
 String message = extras.getString("message");
 messageTextView.setText(message);
 }
 }
}
activity_main.xml (layout for MainActivity):
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <Button
 android:id="@+id/send_button"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Send Hello Message"
 android:layout_centerInParent="true"/>
</RelativeLayout>
activity_second.xml (layout for SecondActivity):
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".SecondActivity">
 <TextView
 android:id="@+id/message_text_view"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:textSize="24sp"
 android:layout_centerInParent="true"/>
</RelativeLayout>
--------------------------



2-----------------------2nd-------------------
Q2] Create an Android application, with two activity first activity will have an EditText and a
Button where the user can enter player name and after clicking on button the entered name
will be display in another Activity. Second activity has the BACK button to transition to first
activity (Using Intent).
Define the layout for the first activity (activity_main.xml):
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <EditText
 android:id="@+id/editTextName"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:hint="Enter player name"
 android:layout_margin="16dp"/>
 <Button
 android:id="@+id/buttonSubmit"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Submit"
 android:layout_below="@id/editTextName"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="16dp"/>
</RelativeLayout>
Define the layout for the second activity (activity_display_name.xml):
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".DisplayNameActivity">
 <TextView
 android:id="@+id/textViewName"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text=""
 android:textSize="24sp"
 android:layout_centerInParent="true"/>
 <Button
 android:id="@+id/buttonBack"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Back"
 android:layout_below="@id/textViewName"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="16dp"/>
</RelativeLayout>
Implement the logic in MainActivity.java and DisplayNameActivity.java:
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 final EditText editTextName = findViewById(R.id.editTextName);
 Button buttonSubmit = findViewById(R.id.buttonSubmit);
 buttonSubmit.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 String playerName = editTextName.getText().toString();
 Intent intent = new Intent(MainActivity.this, DisplayNameActivity.class);
 intent.putExtra("PLAYER_NAME", playerName);
 startActivity(intent);
 }
 });
 }
}
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
public class DisplayNameActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_display_name);
 TextView textViewName = findViewById(R.id.textViewName);
 Button buttonBack = findViewById(R.id.buttonBack);
 Intent intent = getIntent();
 if (intent != null) {
 String playerName = intent.getStringExtra("PLAYER_NAME");
 if (playerName != null && !playerName.isEmpty()) {
 textViewName.setText(playerName);
 }
 }
 buttonBack.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 finish();
 }
 });
 }
}
Declare the activities in the AndroidManifest.xml file:
<activity android:name=".MainActivity">
 <intent-filter>
 <action android:name="android.intent.action.MAIN" />
 <category android:name="android.intent.category.LAUNCHER" />
 </intent-filter>
</activity>
<activity android:name=".DisplayNameActivity" />