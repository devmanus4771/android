Q.1) Create an application that allows the user to enter a number in the textbox. Check whether the
number in the textbox is Armstrong or not. Print the message accordingly in the label control.
activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <com.google.android.material.textfield.TextInputLayout
 android:id="@+id/textInputLayout"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:layout_marginTop="50dp"
 android:layout_marginStart="20dp"
 android:layout_marginEnd="20dp"
 android:hint="Enter a number">
 <com.google.android.material.textfield.TextInputEditText
 android:id="@+id/numberEditText"
 android:layout_width="match_parent"
 android:layout_height="wrap_content" />
 </com.google.android.material.textfield.TextInputLayout>
 <Button
 android:id="@+id/checkButton"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@id/textInputLayout"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="20dp"
 android:text="Check" />
 <TextView
 android:id="@+id/resultTextView"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@id/checkButton"
 android:layout_centerHorizontal="true"
 android:layout_marginTop="20dp"
 android:textColor="@android:color/black"
 android:textSize="18sp" />
</RelativeLayout>
MainActivity.java:
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 final TextView resultTextView = findViewById(R.id.resultTextView);
 Button checkButton = findViewById(R.id.checkButton);
 checkButton.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 String numberStr =
((TextInputEditText)findViewById(R.id.numberEditText)).getText().toString();
 int number = Integer.parseInt(numberStr);
 if (isArmstrong(number)) {
 resultTextView.setText(number + " is an Armstrong number.");
 } else {
 resultTextView.setText(number + " is not an Armstrong number.");
 }
 }
 });
 }
 // Function to check Armstrong number
 private boolean isArmstrong(int number) {
 int originalNumber, remainder, result = 0, n = 0;
 originalNumber = number;
 while (originalNumber != 0) {
 originalNumber /= 10;
 ++n;
 }
 originalNumber = number;
 while (originalNumber != 0) {
 remainder = originalNumber % 10;
 result += Math.pow(remainder, n);
 originalNumber /= 10;
 }
 return result == number;
 }
}


----------------------2nd-----------------
4. Create an Android application which examine, that a phone number, which a user has entered is in
the given format. * Area code should be one of the following: 040, 041, SPPU M.Sc. Computer Science
Syllabus 2023-24 54 050, 0400, 044 * There should 6- 8 numbers in telephone number (+ area code)
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:padding="16dp"
 tools:context=".MainActivity">
 <EditText
 android:id="@+id/phoneNumberEditText"
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:hint="Enter phone number"
 android:inputType="phone" />
 <Button
 android:id="@+id/checkButton"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@id/phoneNumberEditText" android:layout_marginTop="16dp"
 android:text="Check" />
 <TextView
 android:id="@+id/resultTextView"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@id/checkButton" android:layout_marginTop="16dp"
 android:text=""
 android:textSize="18sp" />
</RelativeLayout>
package com.example.phonenumber;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;public class MainActivity extends AppCompatActivity { @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main); final EditText phoneNumberEditText =
findViewById(R.id.phoneNumberEditText);
 Button checkButton =
findViewById(R.id.checkButton);
 final TextView resultTextView =
findViewById(R.id.resultTextView);
 checkButton.setOnClickListener(new
View.OnClickListener() {
 @Override
 public void onClick(View v) {
 String phoneNumber =
phoneNumberEditText.getText().toString().trim(); if (isValidPhoneNumber(phoneNumber)) { resultTextView.setText("Valid phone number!");
 } else {
 resultTextView.setText("Invalid phone number format!");
 }
 }
 });
 }
 private boolean isValidPhoneNumber(String phoneNumber) {
 // Define the valid area codes
 String[] validAreaCodes = {"040", "041", "050", "0400", "044"};
 // Check if the phone number starts with a valid area code
 String areaCode = phoneNumber.substring(0, 3); boolean isValidAreaCode = false;
 for (String code : validAreaCodes) {
 if (code.equals(areaCode)) {
 isValidAreaCode = true;
 break;
 }
 }
 if (!isValidAreaCode) {
 return false;
 }
 // Check if the length of the phone number is between 6 and 8 characters
 String phoneNumberWithoutAreaCode =
phoneNumber.substring(3);
 if (phoneNumberWithoutAreaCode.length() < 6 || phoneNumberWithoutAreaCode.length() > 8) {
 return false;
 }
 // Check if all characters in the phone number (excluding the area code) are digits
 for (char c :
phoneNumberWithoutAreaCode.toCharArray()) {
 if (!Character.isDigit(c)) {
 return false;
 }
 }
 return true;
 }
}